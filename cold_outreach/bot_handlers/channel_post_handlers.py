# cold_outreach/bot_handlers/channel_post_handlers.py

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from cold_outreach.templates.channel_post_manager import channel_post_manager
from cold_outreach.templates.template_manager import template_manager
from loguru import logger

channel_post_router = Router()


class ChannelPostStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –∏–∑ –ø–æ—Å—Ç–æ–≤ –∫–∞–Ω–∞–ª–æ–≤"""
    waiting_template_name = State()
    waiting_channel_username = State()
    waiting_post_selection = State()


@channel_post_router.callback_query(F.data == "templates_create_from_channel")
async def create_template_from_channel_start(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –∏–∑ –ø–æ—Å—Ç–∞ –∫–∞–Ω–∞–ª–∞"""

    text = """üì∫ <b>–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –∏–∑ –ø–æ—Å—Ç–∞ –∫–∞–Ω–∞–ª–∞</b>

üîó <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
‚Ä¢ –í—ã —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ –∫–∞–Ω–∞–ª –∏ –ø–æ—Å—Ç
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —ç—Ç–æ—Ç –ø–æ—Å—Ç –ª–∏–¥–∞–º
‚Ä¢ –ú–µ–¥–∏–∞, –∫–Ω–æ–ø–∫–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è

üìù –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —à–∞–±–ª–æ–Ω–∞:

–ù–∞–ø—Ä–∏–º–µ—Ä: "–ü–æ—Å—Ç –æ –Ω–æ–≤–æ–º –ø—Ä–æ–µ–∫—Ç–µ", "–†–µ–∫–ª–∞–º–∞ –∫–∞–Ω–∞–ª–∞", "–ê–Ω–æ–Ω—Å —Å–æ–±—ã—Ç–∏—è"

üí° –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–ª–∏—á–∞—Ç—å —à–∞–±–ª–æ–Ω—ã –≤ —Å–ø–∏—Å–∫–µ."""

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="outreach_templates")
        ]]
    )

    await callback.message.edit_text(text, reply_markup=keyboard)
    await state.set_state(ChannelPostStates.waiting_template_name)


@channel_post_router.message(ChannelPostStates.waiting_template_name)
async def create_template_from_channel_name(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –ø–æ—Å—Ç–∞"""

    template_name = message.text.strip()

    if not template_name or len(template_name) < 3:
        await message.answer("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
        return

    await state.update_data(template_name=template_name)

    text = f"""üì∫ <b>–®–∞–±–ª–æ–Ω: "{template_name}"</b>

üì∫ –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ username –∫–∞–Ω–∞–ª–∞:

<b>–ü—Ä–∏–º–µ—Ä—ã:</b>
‚Ä¢ <code>@channel_name</code>
‚Ä¢ <code>channel_name</code> (–±–µ–∑ @)

‚ö†Ô∏è <b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b>
‚Ä¢ –ö–∞–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —á—Ç–µ–Ω–∏—è
‚Ä¢ –í–∞—à–∏ —Å–µ—Å—Å–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª
‚Ä¢ –ò–ª–∏ –∫–∞–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É–±–ª–∏—á–Ω—ã–º

üí° <b>–°–æ–≤–µ—Ç:</b> –î–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ —Å–µ—Å—Å–∏–∏ –≤—Ä—É—á–Ω—É—é."""

    await message.answer(text)
    await state.set_state(ChannelPostStates.waiting_channel_username)


@channel_post_router.message(ChannelPostStates.waiting_channel_username)
async def create_template_from_channel_username(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ username –∫–∞–Ω–∞–ª–∞"""

    channel_input = message.text.strip()

    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º username –∫–∞–Ω–∞–ª–∞
    channel_username = channel_input.lstrip("@")

    if not channel_username:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username –∫–∞–Ω–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
        return

    await state.update_data(channel_username=channel_username)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    loading_msg = await message.answer("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É...")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É
        validation = await channel_post_manager.validate_channel_access(channel_username)

        if not validation["valid"]:
            await loading_msg.edit_text(
                f"‚ùå <b>–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É</b>\n\n"
                f"üîó –ö–∞–Ω–∞–ª: @{channel_username}\n"
                f"‚ùå –ü—Ä–∏—á–∏–Ω–∞: {validation['error']}\n\n"
                f"üí° <b>–ß—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:</b>\n"
                f"‚Ä¢ –ö–∞–Ω–∞–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–µ–Ω\n"
                f"‚Ä¢ –í–∞—à–∏ —Å–µ—Å—Å–∏–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª\n"
                f"‚Ä¢ –ö–∞–Ω–∞–ª –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–ª—è –±–æ—Ç–æ–≤"
            )
            return

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–≤—å—é –ø–æ—Å—Ç–æ–≤
        posts_preview = await channel_post_manager.get_channel_posts_preview(channel_username, 5)

        if not posts_preview:
            await loading_msg.edit_text(
                f"‚ùå <b>–í –∫–∞–Ω–∞–ª–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤</b>\n\n"
                f"üîó –ö–∞–Ω–∞–ª: @{channel_username}\n"
                f"üìä –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {validation.get('subscribers_count', 'N/A')}"
            )
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –ø—Ä–µ–≤—å—é
        text = f"""‚úÖ <b>–ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: @{channel_username}</b>

üìä <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {validation.get('channel_title', 'N/A')}
‚Ä¢ –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {validation.get('subscribers_count', 'N/A')}
‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {len(posts_preview)}

üìù <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã:</b>
"""

        keyboard_buttons = []

        for i, post in enumerate(posts_preview):
            # –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
            post_desc = f"#{post['message_id']}"
            if post['has_media']:
                post_desc += f" {post['media_type']}"
            if post['text']:
                post_desc += f" - {post['text'][:30]}..."
            else:
                post_desc += " - [–±–µ–∑ —Ç–µ–∫—Å—Ç–∞]"

            text += f"\n{i + 1}. {post_desc}"
            text += f"\n   üìÖ {post['date']} | üëÅ {post['views']}\n"

            keyboard_buttons.append([
                InlineKeyboardButton(
                    text=f"üìù –ü–æ—Å—Ç #{post['message_id']} ({post['date']})",
                    callback_data=f"select_post_{post['message_id']}"
                )
            ])

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏—é "–ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç"
        keyboard_buttons.insert(0, [
            InlineKeyboardButton(
                text="üîÑ –í—Å–µ–≥–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç",
                callback_data="select_post_latest"
            )
        ])

        keyboard_buttons.append([
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="outreach_templates")
        ])

        keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)

        await loading_msg.edit_text(text, reply_markup=keyboard)
        await state.set_state(ChannelPostStates.waiting_post_selection)

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–Ω–∞–ª–∞: {e}")
        await loading_msg.edit_text(
            f"‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–Ω–∞–ª–∞</b>\n\n"
            f"–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏: {str(e)}"
        )


@channel_post_router.callback_query(F.data.startswith("select_post_"), ChannelPostStates.waiting_post_selection)
async def create_template_from_channel_post_selected(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä –ø–æ—Å—Ç–∞ –∏–∑ –∫–∞–Ω–∞–ª–∞"""

    try:
        data = await state.get_data()
        template_name = data["template_name"]
        channel_username = data["channel_username"]

        post_selection = callback.data.replace("select_post_", "")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Å—Ç–∞
        if post_selection == "latest":
            use_latest_post = True
            post_id = None
            post_desc = "–≤—Å–µ–≥–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç"
        else:
            use_latest_post = False
            post_id = int(post_selection)
            post_desc = f"–ø–æ—Å—Ç #{post_id}"

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω–∏—è
        await callback.message.edit_text("‚è≥ –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –ø–æ—Å—Ç–∞...")

        # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω
        template_id = await template_manager.create_template(
            name=template_name,
            text="",  # –î–ª—è –ø–æ—Å—Ç–æ–≤ —Ç–µ–∫—Å—Ç –Ω–µ –Ω—É–∂–µ–Ω
            description=f"–ü–æ—Å—Ç –∏–∑ –∫–∞–Ω–∞–ª–∞ @{channel_username} ({post_desc})",
            category="channel_post",
            is_channel_post=True,