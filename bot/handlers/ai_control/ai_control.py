from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy import select, update, func
from sqlalchemy.orm import selectinload

from storage.database import get_db
from storage.models.base import Session, Conversation, SessionStatus
from core.handlers.message_handler import message_handler
from loguru import logger

ai_control_router = Router()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã –ò–ò
GLOBAL_AI_ENABLED = True


@ai_control_router.callback_query(F.data == "ai_control_main")
async def ai_control_main(callback: CallbackQuery):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ò–ò"""

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        async with get_db() as db:
            # –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º –ò–ò
            enabled_sessions_result = await db.execute(
                select(func.count(Session.id))
                .where(Session.ai_enabled == True)
            )
            enabled_sessions = enabled_sessions_result.scalar() or 0

            # –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
            active_dialogs_result = await db.execute(
                select(func.count(Conversation.id))
                .where(
                    Conversation.status == "active",
                    Conversation.ai_disabled == False
                )
            )
            active_dialogs = active_dialogs_result.scalar() or 0

            # –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
            paused_dialogs_result = await db.execute(
                select(func.count(Conversation.id))
                .where(Conversation.auto_responses_paused == True)
            )
            paused_dialogs = paused_dialogs_result.scalar() or 0

        global_status = "üü¢ –í–∫–ª—é—á–µ–Ω" if GLOBAL_AI_ENABLED else "üî¥ –û—Ç–∫–ª—é—á–µ–Ω"

        text = f"""ü§ñ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π –ò–ò</b>

üåê <b>–ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:</b> {global_status}

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –°–µ—Å—Å–∏–π —Å –ò–ò: {enabled_sessions}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤: {active_dialogs}
‚Ä¢ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö: {paused_dialogs}

‚öôÔ∏è <b>–£—Ä–æ–≤–Ω–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>
‚Ä¢ üåê –ì–ª–æ–±–∞–ª—å–Ω–æ - –≤—Å—è —Å–∏—Å—Ç–µ–º–∞
‚Ä¢ ü§ñ –ü–æ —Å–µ—Å—Å–∏—è–º - –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã  
‚Ä¢ üí¨ –ü–æ –¥–∏–∞–ª–æ–≥–∞–º - –æ—Ç–¥–µ–ª—å–Ω—ã–µ –±–µ—Å–µ–¥—ã"""

        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üî¥ –í—ã–∫–ª—é—á–∏—Ç—å –≤—Å—ë" if GLOBAL_AI_ENABLED else "üü¢ –í–∫–ª—é—á–∏—Ç—å –≤—Å—ë",
                        callback_data="ai_toggle_global"
                    )
                ],
                [
                    InlineKeyboardButton(text="ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏", callback_data="ai_sessions_control"),
                    InlineKeyboardButton(text="üí¨ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞–º–∏", callback_data="ai_dialogs_control")
                ],
                [
                    InlineKeyboardButton(text="‚è∏Ô∏è –ü–∞—É–∑–∞ –≤—Å–µ—Ö –¥–∏–∞–ª–æ–≥–æ–≤", callback_data="ai_pause_all"),
                    InlineKeyboardButton(text="‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –≤—Å—ë", callback_data="ai_resume_all")
                ],
                [
                    InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="ai_control_main"),
                    InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="dashboard_refresh")
                ]
            ]
        )

        await callback.message.edit_text(text, reply_markup=keyboard)

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ò–ò: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏")


@ai_control_router.callback_query(F.data == "ai_toggle_global")
async def ai_toggle_global(callback: CallbackQuery):
    """–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ò–ò"""

    global GLOBAL_AI_ENABLED
    GLOBAL_AI_ENABLED = not GLOBAL_AI_ENABLED

    status = "–≤–∫–ª—é—á–µ–Ω–∞" if GLOBAL_AI_ENABLED else "–æ—Ç–∫–ª—é—á–µ–Ω–∞"

    if not GLOBAL_AI_ENABLED:
        # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏
        active_sessions = await message_handler.get_active_sessions()
        for session_name in active_sessions:
            await message_handler.remove_session(session_name)

        await callback.answer(f"üî¥ –°–∏—Å—Ç–µ–º–∞ –ò–ò {status}")
    else:
        # –í–∫–ª—é—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏
        async with get_db() as db:
            result = await db.execute(
                select(Session).where(
                    Session.status == SessionStatus.ACTIVE,
                    Session.ai_enabled == True
                )
            )
            sessions = result.scalars().all()

            for session in sessions:
                await message_handler.add_session(session.session_name)

        await callback.answer(f"üü¢ –°–∏—Å—Ç–µ–º–∞ –ò–ò {status}")

    # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é
    await ai_control_main(callback)


@ai_control_router.callback_query(F.data == "ai_pause_all")
async def ai_pause_all(callback: CallbackQuery):
    """–ü–∞—É–∑–∞ –≤—Å–µ—Ö –¥–∏–∞–ª–æ–≥–æ–≤"""

    try:
        async with get_db() as db:
            # –°—Ç–∞–≤–∏–º –Ω–∞ –ø–∞—É–∑—É –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏
            await db.execute(
                update(Conversation)
                .where(Conversation.status == "active")
                .values(auto_responses_paused=True)
            )
            await db.commit()

        await callback.answer("‚è∏Ô∏è –í—Å–µ –¥–∏–∞–ª–æ–≥–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        await ai_control_main(callback)

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∏–∞–ª–æ–≥–æ–≤: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞")


@ai_control_router.callback_query(F.data == "ai_resume_all")
async def ai_resume_all(callback: CallbackQuery):
    """–í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∏–∞–ª–æ–≥–æ–≤"""

    try:
        async with get_db() as db:
            # –£–±–∏—Ä–∞–µ–º –ø–∞—É–∑—É —Å–æ –≤—Å–µ—Ö –¥–∏–∞–ª–æ–≥–æ–≤
            await db.execute(
                update(Conversation)
                .values(
                    auto_responses_paused=False,
                    ai_disabled=False
                )
            )
            await db.commit()

        await callback.answer("‚ñ∂Ô∏è –í—Å–µ –¥–∏–∞–ª–æ–≥–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        await ai_control_main(callback)

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞")