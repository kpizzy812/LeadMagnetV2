# scripts/fix_dialogs.py

# !/usr/bin/env python3
import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from storage.database import db_manager, get_db
from storage.models.base import Conversation, Message
from sqlalchemy import select, update
from loguru import logger


async def fix_problematic_dialogs():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤"""

    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤...")

    try:
        await db_manager.initialize()

        async with get_db() as db:
            # –ù–∞—Ö–æ–¥–∏–º –¥–∏–∞–ª–æ–≥–∏ —Å –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            result = await db.execute(
                select(Conversation.id, Message.content)
                .join(Message)
                .where(
                    Message.role == "user",
                    Message.processed == False,
                    Conversation.is_whitelisted == True,
                    Conversation.requires_approval == False
                )
            )

            problematic = result.all()

            if problematic:
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(problematic)} –¥–∏–∞–ª–æ–≥–æ–≤ —Å –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏")

                # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                from core.engine.conversation_manager import conversation_manager

                for conv_id, message_content in problematic:
                    try:
                        response = await conversation_manager.process_user_message(
                            conversation_id=conv_id,
                            message_text=message_content
                        )

                        if response:
                            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω –¥–∏–∞–ª–æ–≥ {conv_id}")
                        else:
                            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∏–∞–ª–æ–≥ {conv_id}")

                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∏–∞–ª–æ–≥–∞ {conv_id}: {e}")

            else:
                print("‚úÖ –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

        await db_manager.close()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    asyncio.run(fix_problematic_dialogs())