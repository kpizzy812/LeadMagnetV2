#!/usr/bin/env python3
# scripts/set_ref_links.py - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent.parent))

from storage.database import db_manager, get_db
from storage.models.base import Session
from sqlalchemy import select
from loguru import logger


async def set_ref_links():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π"""

    print("üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤")
    print("=" * 50)

    # üéØ –ó–î–ï–°–¨ –ù–ê–°–¢–†–ê–ò–í–ê–ô–¢–ï –í–ê–®–ò –†–ï–§–ï–†–ê–õ–¨–ù–´–ï –°–°–´–õ–ö–ò:

    # –í–∞—Ä–∏–∞–Ω—Ç 1: –û–¥–Ω–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –≤—Å–µ—Ö (–µ—Å–ª–∏ —É –≤–∞—Å –æ–¥–∏–Ω —Ä–µ—Ñ –∫–æ–¥)
    base_ref_link = "https://t.me/your_project_bot?start=ref123"

    # –í–∞—Ä–∏–∞–Ω—Ç 2: –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ—Å—Å–∏–∏ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
    unique_ref_links = {
        "alex_session": "https://t.me/your_project_bot?start=alex001",
        "maria_session": "https://t.me/your_project_bot?start=maria002",
        "max_session": "https://t.me/your_project_bot?start=max003",
        # –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ —Å–µ—Å—Å–∏–∏ –∏ –∏—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã
    }

    try:
        await db_manager.initialize()

        async with get_db() as db:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏
            result = await db.execute(select(Session))
            sessions = result.scalars().all()

            if not sessions:
                print("‚ùå –°–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                return

            print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(sessions)} —Å–µ—Å—Å–∏–π")

            updated_count = 0

            for session in sessions:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
                if session.session_name in unique_ref_links:
                    ref_link = unique_ref_links[session.session_name]
                    print(f"üîó {session.session_name}: —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞")
                else:
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é —Å—Å—ã–ª–∫—É
                    ref_link = base_ref_link
                    print(f"üîó {session.session_name}: –±–∞–∑–æ–≤–∞—è —Å—Å—ã–ª–∫–∞")

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é
                session.project_ref_link = ref_link
                updated_count += 1

            await db.commit()

            print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} —Å–µ—Å—Å–∏–π")
            print("üéØ –ê–≥–µ–Ω—Ç—ã —Ç–µ–ø–µ—Ä—å –∑–Ω–∞—é—Ç –∫–∞–∫–∏–µ —Å—Å—ã–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å!")

        await db_manager.close()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


async def show_current_links():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏"""

    try:
        await db_manager.initialize()

        async with get_db() as db:
            result = await db.execute(select(Session))
            sessions = result.scalars().all()

            print("\nüìã –¢–µ–∫—É—â–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏:")
            print("-" * 60)

            for session in sessions:
                ref_link = session.project_ref_link or "‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê"
                print(f"ü§ñ {session.session_name}")
                print(f"   üîó {ref_link}")
                print()

        await db_manager.close()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


async def main():
    if len(sys.argv) > 1 and sys.argv[1] == "show":
        await show_current_links()
    else:
        await set_ref_links()
        await show_current_links()


if __name__ == "__main__":
    print("üéØ –ö–æ–º–∞–Ω–¥—ã:")
    print("python scripts/set_ref_links.py - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫–∏")
    print("python scripts/set_ref_links.py show - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ")
    print()

    asyncio.run(main())