#!/usr/bin/env python3
# scripts/check_sessions.py

"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent.parent))

from storage.database import get_db, db_manager
from storage.models.base import Session
from sqlalchemy import select


async def check_all_sessions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π –≤ –ë–î"""

    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)

    try:
        await db_manager.initialize()

        async with get_db() as db:
            result = await db.execute(
                select(Session).order_by(Session.session_name)
            )
            sessions = result.scalars().all()

        if not sessions:
            print("‚ùå –ù–µ—Ç —Å–µ—Å—Å–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return

        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(sessions)} —Å–µ—Å—Å–∏–π –≤ –ë–î:\n")

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        active_sessions = []
        inactive_sessions = []

        for session in sessions:
            status_emoji = {
                "active": "üü¢",
                "inactive": "üü°",
                "banned": "üî¥",
                "error": "‚ö†Ô∏è"
            }.get(session.status, "‚ùì")

            ai_emoji = "ü§ñ" if session.ai_enabled else "üì¥"
            persona_emoji = "üé≠" if session.persona_type else "‚ùì"

            session_info = f"{status_emoji} {ai_emoji} {persona_emoji} {session.session_name}"

            if session.persona_type:
                session_info += f" ({session.persona_type})"

            if session.username:
                session_info += f" - @{session.username}"

            print(session_info)

            if session.status == "active":
                active_sessions.append(session.session_name)
            else:
                inactive_sessions.append(session.session_name)

        print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {len(active_sessions)}")
        print(f"‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: {len(inactive_sessions)}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ—Å—Å–∏–∏ –±–µ–∑ –ø–µ—Ä—Å–æ–Ω
        no_persona = [s for s in sessions if not s.persona_type]
        if no_persona:
            print(f"\n‚ö†Ô∏è –°–µ—Å—Å–∏–∏ –±–µ–∑ –ø–µ—Ä—Å–æ–Ω—ã ({len(no_persona)}):")
            for session in no_persona:
                print(f"   ‚Ä¢ {session.session_name}")

            print(f"\nüí° –ù–∞–∑–Ω–∞—á—å—Ç–µ –ø–µ—Ä—Å–æ–Ω—ã:")
            print(f"python scripts/session_manager.py persona SESSION_NAME PERSONA_TYPE")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ—Å—Å–∏–∏ –±–µ–∑ —Ä–µ—Ñ —Å—Å—ã–ª–æ–∫
        no_reflink = [s for s in sessions if not s.project_ref_link]
        if no_reflink:
            print(f"\nüîó –°–µ—Å—Å–∏–∏ –±–µ–∑ —Ä–µ—Ñ —Å—Å—ã–ª–∫–∏ ({len(no_reflink)}):")
            for session in no_reflink[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   ‚Ä¢ {session.session_name}")

            if len(no_reflink) > 5:
                print(f"   ‚Ä¢ ... –∏ –µ—â–µ {len(no_reflink) - 5}")

            print(f"\nüí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–µ—Ñ —Å—Å—ã–ª–∫–∏:")
            print(f"python scripts/session_manager.py reflink SESSION_NAME \"https://t.me/bot?start=ref\"")

        await db_manager.close()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


async def test_session_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–µ—Å—Å–∏–π"""

    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–µ—Å—Å–∏–π")
    print("=" * 30)

    base_dir = Path(__file__).parent.parent
    sessions_dir = base_dir / "data" / "sessions"

    session_files = list(sessions_dir.rglob("*.session"))

    print(f"üìÇ –ù–∞–π–¥–µ–Ω–æ {len(session_files)} —Ñ–∞–π–ª–æ–≤ —Å–µ—Å—Å–∏–π:")

    for session_file in session_files:
        size_kb = session_file.stat().st_size / 1024
        print(f"   ‚Ä¢ {session_file.name} ({size_kb:.1f} KB)")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""

    try:
        await check_all_sessions()
        await test_session_files()

        print(f"\nüéØ –ò—Ç–æ–≥:")
        print(f"‚úÖ –í—Å–µ —Å–µ—Å—Å–∏–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º—É")
        print(f"üí° –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    asyncio.run(main())