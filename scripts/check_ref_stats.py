#!/usr/bin/env python3
# scripts/check_ref_stats.py - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º —Å—Å—ã–ª–∫–∞–º

import asyncio
import sys
from pathlib import Path
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent.parent))

from storage.database import db_manager, get_db
from storage.models.base import Session, Conversation, Lead
from sqlalchemy import select, func
from sqlalchemy.orm import selectinload


async def ref_links_stats():
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º —Å—Å—ã–ª–∫–∞–º"""

    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫")
    print("=" * 50)

    try:
        await db_manager.initialize()

        async with get_db() as db:
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–µ—Å—Å–∏—è–º
            result = await db.execute(
                select(Session)
                .options(selectinload(Session.conversations))
            )
            sessions = result.scalars().all()

            total_conversations = 0
            total_ref_sent = 0

            print("üìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∞–≥–µ–Ω—Ç–∞–º:")
            print("-" * 60)

            for session in sessions:
                # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥–∏ –≥–¥–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–µ—Ñ —Å—Å—ã–ª–∫–∞
                ref_sent_count = sum(1 for conv in session.conversations if conv.ref_link_sent)
                total_conversations += len(session.conversations)
                total_ref_sent += ref_sent_count

                conversion_rate = (ref_sent_count / max(len(session.conversations), 1)) * 100

                print(f"ü§ñ {session.session_name}")
                print(f"   üì± –ü–µ—Ä—Å–æ–Ω–∞: {session.persona_type or '–Ω–µ –∑–∞–¥–∞–Ω–∞'}")
                print(f"   üí¨ –í—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤: {len(session.conversations)}")
                print(f"   üîó –†–µ—Ñ —Å—Å—ã–ª–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {ref_sent_count}")
                print(f"   üìà –ö–æ–Ω–≤–µ—Ä—Å–∏—è: {conversion_rate:.1f}%")

                if session.project_ref_link:
                    print(f"   üåê –°—Å—ã–ª–∫–∞: {session.project_ref_link[:50]}...")
                else:
                    print(f"   ‚ùå –°—Å—ã–ª–∫–∞: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê")
                print()

            # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            overall_conversion = (total_ref_sent / max(total_conversations, 1)) * 100

            print("üéØ –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            print(f"   üìä –í—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤: {total_conversations}")
            print(f"   üîó –†–µ—Ñ —Å—Å—ã–ª–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {total_ref_sent}")
            print(f"   üìà –û–±—â–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è: {overall_conversion:.1f}%")

        await db_manager.close()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


async def recent_conversions():
    """–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ (–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏)"""

    print("\nüéØ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏:")
    print("-" * 60)

    try:
        await db_manager.initialize()

        async with get_db() as db:
            # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –¥–∏–∞–ª–æ–≥–æ–≤ –≥–¥–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–µ—Ñ —Å—Å—ã–ª–∫–∞
            result = await db.execute(
                select(Conversation)
                .options(selectinload(Conversation.lead))
                .options(selectinload(Conversation.session))
                .where(Conversation.ref_link_sent == True)
                .order_by(Conversation.ref_link_sent_at.desc())
                .limit(10)
            )
            conversations = result.scalars().all()

            if not conversations:
                print("üìù –ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫")
                return

            for conv in conversations:
                time_ago = datetime.now() - conv.ref_link_sent_at if conv.ref_link_sent_at else timedelta(0)
                hours_ago = int(time_ago.total_seconds() / 3600)

                print(f"‚úÖ @{conv.lead.username} ‚Üê {conv.session.session_name}")
                print(f"   ‚è∞ {hours_ago}—á –Ω–∞–∑–∞–¥")
                print(f"   üìä –≠—Ç–∞–ø: {conv.current_stage}")
                print()

        await db_manager.close()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


async def main():
    await ref_links_stats()
    await recent_conversions()

    print("\nüí° –°–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∫–æ–Ω–≤–µ—Ä—Å–∏–∏:")
    print("‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ—Ñ —Å—Å—ã–ª–∫–∏")
    print("‚Ä¢ –°–µ—Å—Å–∏–∏ –±–µ–∑ –ø–µ—Ä—Å–æ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ö—É–¥—à—É—é –∫–æ–Ω–≤–µ—Ä—Å–∏—é")
    print("‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —á—Ç–æ –∞–≥–µ–Ω—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç —Å—Å—ã–ª–∫–∏")
    print("‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –Ω–∞ –∫–∞–∫–∏—Ö —ç—Ç–∞–ø–∞—Ö –≤–æ—Ä–æ–Ω–∫–∏ —Ç–µ—Ä—è—é—Ç—Å—è –ª–∏–¥—ã")


if __name__ == "__main__":
    asyncio.run(main())